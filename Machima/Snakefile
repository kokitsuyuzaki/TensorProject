import pandas as pd
from snakemake.utils import min_version

#
# Setting
#
min_version("6.0.5")
container: 'docker://koki/tensor-projects-machima:20220304'

SCRNA_SAMPLES = [
    'Human_PBMC_1', 'Human_PBMC_2', 'Human_PBMC_3',
    'Human_PBMC_4', 'Human_PBMC_5', 'Human_PBMC_6',
    # ここらへんの複数行列をどうやってWF上で扱うか
    # 別のSnakemake?
    'Human_PBMC_COVID19_1', 'Human_PBMC_COVID19_2',
    'Human_PBMC_COVID19_3',
    # 'Human_PBMC_KD_1',
    'Human_PBMC_Salmonella_1',
    'Human_BloodAtlas_1', 'Human_BloodAtlas_2',
    'Mouse_ESC_1', 'Mouse_ESC_2']

rule all:
    input:
        expand('data/scRNAseq/{scrna}/X_RNA.csv',
            scrna=SCRNA_SAMPLES),
        expand('data/scRNAseq/{scrna}/GeneNames.csv',
            scrna=SCRNA_SAMPLES),
        expand('data/scRNAseq/{scrna}/Label.csv',
            scrna=SCRNA_SAMPLES),
        # expand('plot/{scrna}/{scrna}.png',
        #     scrna=SCRNA_SAMPLES),
        # expand('plot/{scrna}/{m}_W.png',
        #     scrna=SCRNA_SAMPLES, m=METHODS),
        # expand('plot/{scrna}/{m}_X_GAM.png',
        #     scrna=SCRNA_SAMPLES, m=METHODS),

rule scrna:
    output:
        'data/scRNAseq/{scrna}/X_RNA.csv',
        'data/scRNAseq/{scrna}/GeneNames.csv',
        'data/scRNAseq/{scrna}/Label.csv'
    resources:
        mem_gb=100
    benchmark:
        'benchmarks/scrna_{scrna}.txt'
    log:
        'logs/scrna_{scrna}.log'
    shell:
        'src/{wildcards.scrna}.sh >& {log}'

# rule plot_data:
#     input:
#         in1='data/{scrna}/X_RNA.csv',
#         in2='data/{scrna}/X_GAM.csv',
#         in3='data/{scrna}/X_Epi.csv',
#         in4='data/{scrna}/W.csv',
#         in5='data/{scrna}/Winv.csv'
#     output:
#         'plot/{scrna}/{scrna}.png'
#     resources:
#         mem_gb=100
#     benchmark:
#         'benchmarks/plot_data_{scrna}.txt'
#     log:
#         'logs/plot_data_{scrna}.log'
#     shell:
#         'src/plot_data.sh {input} {output} >& {log}'

# rule method:
#     input:
#         in1='data/{scrna}/X_RNA.csv',
#         in2='data/{scrna}/X_Epi.csv'
#     output:
#         out1='output/{scrna}/{m}_W.csv',
#         out2='output/{scrna}/{m}_X_GAM.csv'
#     wildcard_constraints:
#         m='|'.join([re.escape(x) for x in METHODS])
#     resources:
#         mem_gb=100
#     benchmark:
#         'benchmarks/{m}_{scrna}.txt'
#     log:
#         'logs/{m}_{scrna}.log'
#     shell:
#         'src/{wildcards.m}.sh {input} {output} >& {log}'

# rule plot_method:
#     input:
#         in1='output/{scrna}/{m}_W.csv',
#         in2='output/{scrna}/{m}_X_GAM.csv'
#     output:
#         out1='plot/{scrna}/{m}_W.png',
#         out2='plot/{scrna}/{m}_X_GAM.png'
#     wildcard_constraints:
#         m='|'.join([re.escape(x) for x in METHODS])
#     resources:
#         mem_gb=100
#     benchmark:
#         'benchmarks/plot_{m}_{scrna}.txt'
#     log:
#         'logs/plot_{m}_{scrna}.log'
#     shell:
#         'src/plot_method.sh {input} {output} >& {log}'
